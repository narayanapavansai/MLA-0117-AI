import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

(X_train, y_train), (X_test, y_test) = mnist.load_data()

X_train = X_train / 255.0  
X_test = X_test / 255.0
y_train = to_categorical(y_train, 10)  
y_test = to_categorical(y_test, 10)

model = Sequential([
    Flatten(input_shape=(28, 28)),       
    Dense(128, activation='relu'),      
    Dense(64, activation='relu'),       
    Dense(10, activation='softmax')     
])

model.compile(optimizer='adam',          
              loss='categorical_crossentropy', 
              metrics=['accuracy'])

model.fit(X_train, y_train, epochs=5, batch_size=32, validation_split=0.2)

test_loss, test_accuracy = model.evaluate(X_test, y_test)
print(f"Test Accuracy: {test_accuracy * 100:.2f}%")

predictions = model.predict(X_test[:5])

for i, pred in enumerate(predictions):
    print(f"Sample {i+1} Predicted Label: {pred.argmax()}, True Label: {y_test[i].argmax()}")
